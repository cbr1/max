uniform	sampler2D	u_source;
uniform	vec2		u_ibs;
uniform vec4		f_BlurParams;

// pixel(x,y) = (pixel(x,y-1) + pixel(x,y+1) + pixel(x-1,y) + pixel(x+1,y))
//				-----------------------------------------------------------
//										4


// 	vec4	s1 = texture2D(u_source, (%in.fragcoord%.xy + vec2(0.0, -1.0)) * u_ibs),
// 			s2 = texture2D(u_source, (%in.fragcoord%.xy + vec2(-1.0, 0.0)) * u_ibs),
// 			s0 = texture2D(u_source, (%in.fragcoord%.xy + vec2(0.0, 0.0)) * u_ibs),
// 			s3 = texture2D(u_source, (%in.fragcoord%.xy + vec2(1.0, 0.0)) * u_ibs),
// 			s4 = texture2D(u_source, (%in.fragcoord%.xy + vec2(0.0, 1.0)) * u_ibs);
// 
// 	%out.color% = vec4((s0 + s1 + s2 + s3 + s4).rgb * 0.2 * f_Fading, 1.0);

// 	vec4	s1 = texture2D(u_source, (%in.fragcoord%.xy + vec2(-1.0, -1.0)) * u_ibs),
// 			s2 = texture2D(u_source, (%in.fragcoord%.xy + vec2(0.0, -1.0)) * u_ibs),
// 			s3 = texture2D(u_source, (%in.fragcoord%.xy + vec2(1.0, -1.0)) * u_ibs),
// 			s4 = texture2D(u_source, (%in.fragcoord%.xy + vec2(-1.0, 0.0)) * u_ibs),
// 			s5 = texture2D(u_source, (%in.fragcoord%.xy + vec2(0.0, 0.0)) * u_ibs),
// 			s6 = texture2D(u_source, (%in.fragcoord%.xy + vec2(1.0, 0.0)) * u_ibs),
// 			s7 = texture2D(u_source, (%in.fragcoord%.xy + vec2(-1.0, 1.0)) * u_ibs),
// 			s8 = texture2D(u_source, (%in.fragcoord%.xy + vec2(0.0, 1.0)) * u_ibs),
// 			s9 = texture2D(u_source, (%in.fragcoord%.xy + vec2(1.0, 1.0)) * u_ibs);
// 
// 	%out.color% = vec4((s1 + s2 + s3 + s4 + s5 + s6 + s7 + s8 + s9).rgb * 0.1111111111111 * f_Fading, 1.0);


// f_BlurParams.x -> RelativeStart
// f_BlurParams.y -> RelativeStop
// f_BlurParams.z -> Factor
// f_BlurParams.w -> Min

float fmin = f_BlurParams.w;
vec3 res = vec3(0.0, 0.0, 0.0);
vec3 sum = vec3(0.0, 0.0, 0.0);
 
for (float y = f_BlurParams.x; y <= f_BlurParams.y; y += 1.0)
{
	for (float x = f_BlurParams.x; x <= f_BlurParams.y; x += 1.0)
	{
		sum += texture2D(u_source, (%in.fragcoord%.xy + vec2(x, y)) * u_ibs).rgb;
	}
}
 
res = sum * f_BlurParams.z;

res.x = clamp(res.x, fmin, 1.0);
res.y = clamp(res.y, fmin, 1.0);
res.z = clamp(res.z, fmin, 1.0);

%out.color% = vec4(res, 1.0);